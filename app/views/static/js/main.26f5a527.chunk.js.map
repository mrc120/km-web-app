{"version":3,"sources":["http-common.js","services/KsiazkaService.js","components/AddEmployee.js","components/Ksiazka.js","components/KsiazkaList.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","headers","http","get","id","data","post","put","delete","imie","AddEmployee","initialTutorialState","nazwisko","adres_email","numer_tel","nazwa_dzialu","numer_pokoju","published","useState","ksiazka","setEmployee","submitted","setSubmitted","handleInputChange","event","target","name","value","className","onClick","htmlFor","type","required","onChange","TutorialDataService","then","response","console","log","catch","e","Ksiazka","props","currentKsiazka","setCurrentKsiazka","message","setMessage","useEffect","match","params","updatePublished","status","history","push","KsiazkaList","ksiazka_crud","setksiazka_crud","currentIndex","setCurrentIndex","searchTitle","setSearchTitle","retrieveKsiazka","placeholder","map","index","setActiveTutorial","to","App","href","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.26f5a527.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"http://localhost:8080/api\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});\n","import http from \"../http-common\";\n\nconst getAll = () => {\n  return http.get(\"/ksiazka\");\n};\n\nconst get = id => {\n  return http.get(`/ksiazka/${id}`);\n};\n\nconst create = data => {\n  return http.post(\"/ksiazka\", data);\n};\n\nconst update = (id, data) => {\n  return http.put(`/ksiazka/${id}`, data);\n};\n\nconst remove = id => {\n  return http.delete(`/ksiazka/${id}`);\n};\n\nconst removeAll = () => {\n  return http.delete(`/ksiazka`);\n};\n\nconst findByTitle = imie => {\n  return http.get(`/ksiazka?imie=${imie}`);\n};\n\nexport default {\n  getAll, \n  get,\n  create,\n  update,\n  remove,\n  removeAll,\n  findByTitle\n};\n","import React, { useState } from \"react\";\nimport TutorialDataService from \"../services/KsiazkaService\";\n\nconst AddEmployee = () => {\n  const initialTutorialState = {\n    id: null,\n    imie: \"\",\n    nazwisko: \"\",\n    adres_email: \"\",\n    numer_tel: \"\",\n    nazwa_dzialu: \"\",\n    numer_pokoju: \"\",\n    published: false\n  };\n\n  const [ksiazka, setEmployee] = useState(initialTutorialState);\n  const [submitted, setSubmitted] = useState(false);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setEmployee({ ...ksiazka, [name]: value });\n  };\n\n  const saveEmployee = () => {\n    var data = {\n      imie: ksiazka.imie,\n      nazwisko: ksiazka.nazwisko,\n      adres_email: ksiazka.adres_email,\n      numer_tel: ksiazka.numer_tel,\n      numer_pokoju: ksiazka.numer_pokoju,\n      nazwa_dzialu: ksiazka.nazwa_dzialu\n    };\n\n    TutorialDataService.create(data)\n      .then(response => {\n        setEmployee({\n          id: response.data.id,\n          imie: response.data.imie,\n          nazwisko: response.data.nazwisko,\n          adres_email: response.data.adres_email,\n          numer_tel: response.data.numer_tel,\n          nazwa_dzialu: response.data.nazwa_dzialu,\n          numer_pokoju: response.data.numer_pokoju,\n          published: response.data.published\n        });\n        setSubmitted(true);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const newEmployee = () => {\n    setEmployee(initialTutorialState);\n    setSubmitted(false);\n  };\n\n  return (\n    <div className=\"submit-form\">\n      {submitted ? (\n        <div>\n          <h4>Dodano pomyslnie!</h4>\n          <button className=\"btn btn-success\" onClick={newEmployee}>\n            Dodaj\n          </button>\n        </div>\n      ) : (\n        <div>\n         <div className=\"form-group\">\n            <label htmlFor=\"imie\">Imie</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"imie\"\n              required\n              value={ksiazka.imie}\n              onChange={handleInputChange}\n              name=\"imie\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"nazwisko\">Nazwisko</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"nazwisko\"\n              required\n              value={ksiazka.nazwisko}\n              onChange={handleInputChange}\n              name=\"nazwisko\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"adres_email\">Adres e-mail</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"adres_email\"\n              required\n              value={ksiazka.adres_email}\n              onChange={handleInputChange}\n              name=\"adres_email\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"numer_tel\">Numer telefonu</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"numer_tel\"\n              required\n              value={ksiazka.numer_tel}\n              onChange={handleInputChange}\n              name=\"numer_tel\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"nazwa_dzialu\">Nazwa działu</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"nazwa_dzialu\"\n              required\n              value={ksiazka.nazwa_dzialu}\n              onChange={handleInputChange}\n              name=\"nazwa_dzialu\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"numer_pokoju\">Numer pokoju</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"numer_pokoju\"\n              required\n              value={ksiazka.numer_pokoju}\n              onChange={handleInputChange}\n              name=\"numer_pokoju\"\n            />\n          </div>\n          \n\n          <button onClick={saveEmployee} className=\"btn btn-success\">\n            Dodaj\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AddEmployee;\n","import React, { useState, useEffect } from \"react\";\nimport TutorialDataService from \"../services/KsiazkaService\";\n\nconst Ksiazka = props => {\n  const initialTutorialState = {\n    id: null,\n    imie: \"\",\n    nazwisko: \"\",\n    adres_email: \"\",\n    numer_tel: \"\",\n    nazwa_dzialu: \"\",\n    numer_pokoju: \"\",\n    published: false\n  };\n  const [currentKsiazka, setCurrentKsiazka] = useState(initialTutorialState);\n  const [message, setMessage] = useState(\"\");\n\n  const getKsiazka = id => {\n    TutorialDataService.get(id)\n      .then(response => {\n        setCurrentKsiazka(response.data);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  useEffect(() => {\n      getKsiazka(props.match.params.id);\n  }, [props.match.params.id]);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setCurrentKsiazka({...currentKsiazka, [name]: value });\n  };\n\n  const updatePublished = status => {\n    var data = {\n      id: currentKsiazka.id,\n      imie: currentKsiazka.imie,\n      nazwisko: currentKsiazka.nazwisko,\n      adres_email: currentKsiazka.adres_email,\n      numer_tel: currentKsiazka.numer_tel,\n      nazwa_dzialu: currentKsiazka.nazwa_dzialu,\n      numer_pokoju: currentKsiazka.numer_pokoju,\n      published: status\n    };\n\n    TutorialDataService.update(currentKsiazka.id, data)\n      .then(response => {\n        setCurrentKsiazka({ ...currentKsiazka, published: status });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const updateKsiazka = () => {\n    TutorialDataService.update(currentKsiazka.id, currentKsiazka)\n      .then(response => {\n        console.log(response.data);\n        setMessage(\"Książka została poprawnie zaktualizowana\");\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const deleteKsiazka = () => {\n    TutorialDataService.remove(currentKsiazka.id)\n      .then(response => {\n        console.log(response.data);\n        props.history.push(\"/ksiazka\");\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  return (\n    <div>\n      {currentKsiazka ? (\n        <div className=\"edit-form\">\n          <h4>Ksiazka</h4>\n          <form>\n            <div className=\"form-group\">\n              <label htmlFor=\"imie\">Nazwa</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"imie\"\n                name=\"imie\"\n                value={currentKsiazka.imie}\n                onChange={handleInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"nazwisko\">nazwisko</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"nazwisko\"\n                name=\"nazwisko\"\n                value={currentKsiazka.nazwisko}\n                onChange={handleInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"adres_email\">adresemail</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"adres_email\"\n                name=\"adres_email\"\n                value={currentKsiazka.adres_email}\n                onChange={handleInputChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>\n                <strong>Status:</strong>\n              </label>\n              {currentKsiazka.published ? \"Published\" : \"Pending\"}\n            </div>\n          </form>\n\n          {currentKsiazka.published ? (\n            <button\n              className=\"badge badge-primary mr-2\"\n              onClick={() => updatePublished(false)}\n            >\n              Odpublikuj\n            </button>\n          ) : (\n            <button\n              className=\"badge badge-primary mr-2\"\n              onClick={() => updatePublished(true)}\n            >\n              Publikuj\n            </button>\n          )}\n\n          <button className=\"badge badge-danger mr-2\" onClick={deleteKsiazka}>\n            Usuń\n          </button>\n\n          <button\n            type=\"submit\"\n            className=\"badge badge-success\"\n            onClick={updateKsiazka}\n          >\n            Aktualizuj\n          </button>\n          <p>{message}</p>\n        </div>\n      ) : (\n        <div>\n          <br />\n          <p>Ksiazka adresowa kliknij na mnie</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Ksiazka;\n","import React, { useState, useEffect } from \"react\";\nimport TutorialDataService from \"../services/KsiazkaService\";\nimport { Link } from \"react-router-dom\";\n\nconst KsiazkaList = () => {\n  const [ksiazka_crud, setksiazka_crud] = useState([]);\n  const [currentKsiazka, setCurrentKsiazka] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [searchTitle, setSearchTitle] = useState(\"\");\n\n  useEffect(() => {\n    retrieveKsiazka();\n  }, []);\n\n  const onChangeSearchTitle = e => {\n    const searchTitle = e.target.value;\n    setSearchTitle(searchTitle);\n  };\n\n  const retrieveKsiazka = () => {\n    TutorialDataService.getAll()\n      .then(response => {\n        setksiazka_crud(response.data);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const refreshList = () => {\n    retrieveKsiazka();\n    setCurrentKsiazka(null);\n    setCurrentIndex(-1);\n  };\n\n  const setActiveTutorial = (ksiazka, index) => {\n    setCurrentKsiazka(ksiazka);\n    setCurrentIndex(index);\n  };\n\n  const removeAllTutorials = () => {\n    TutorialDataService.removeAll()\n      .then(response => {\n        console.log(response.data);\n        refreshList();\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const findByTitle = () => {\n    TutorialDataService.findByTitle(searchTitle)\n      .then(response => {\n       setksiazka_crud(response.data);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  return (\n    <div className=\"list row\">\n      <div className=\"col-md-8\">\n        <div className=\"input-group mb-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Szukaj po imieniu\"\n            value={searchTitle}\n            onChange={onChangeSearchTitle}\n          />\n          <div className=\"input-group-append\">\n            <button\n              className=\"btn btn-outline-secondary\"\n              type=\"button\"\n              onClick={findByTitle}\n            >\n              Szukaj\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"col-md-6\">\n        <h4>Ksiazka lista</h4>\n\n        <ul className=\"list-group\">\n          {ksiazka_crud &&\n            ksiazka_crud.map((ksiazka, index) => (\n              <li\n                className={\n                  \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\n                }\n                onClick={() => setActiveTutorial(ksiazka, index)}\n                key={index}\n              >\n                {ksiazka.imie}\n              </li>\n            ))}\n        </ul>\n\n        <button\n          className=\"m-3 btn btn-sm btn-danger\"\n          onClick={removeAllTutorials}\n        >\n          Usun wsyzstko\n        </button>\n      </div>\n      <div className=\"col-md-6\">\n        {currentKsiazka ? (\n          <div>\n            <h4>Ksiazki</h4>\n            <div>\n              <label>\n                <strong>Tytul:</strong>\n              </label>{\" \"}\n              {currentKsiazka.imie}\n            </div>\n            <div>\n              <label>\n                <strong>Nazwisko:</strong>\n              </label>{\" \"}\n              {currentKsiazka.nazwisko}\n            </div>\n            <div>\n              <label>\n                <strong>cs:</strong>\n              </label>{\" \"}\n              {currentKsiazka.numer_tel}\n            </div>\n            <div>\n              <label>\n                <strong>Tytul:</strong>\n              </label>{\" \"}\n              {currentKsiazka.nazwa_dzialu}\n            </div>\n            <div>\n              <label>\n                <strong>Tytul:</strong>\n              </label>{\" \"}\n              {currentKsiazka.adres_email}\n            </div>\n            <div>\n              <label>\n                <strong>Tytul:</strong>\n              </label>{\" \"}\n              {currentKsiazka.numer_pokoju}\n            </div>\n            <div>\n              <label>\n                <strong>Status:</strong>\n              </label>{\" \"}\n              {currentKsiazka.published ? \"Published\" : \"Pending\"}\n            </div>\n\n            <Link\n              to={\"/ksiazka/\" + currentKsiazka.id}\n              className=\"badge badge-warning\"\n            >\n              Edit\n            </Link>\n          </div>\n        ) : (\n          <div>\n            <br />\n            <p>Please click on a Tutorial...</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default KsiazkaList;\n","import React from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AddEmployee from \"./components/AddEmployee\";\nimport Ksiazka from \"./components/Ksiazka\";\nimport KsiazkaList from \"./components/KsiazkaList\";\n\nfunction App() {\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <a href=\"/ksiazka\" className=\"navbar-brand\">\n          KM Plock\n        </a>\n        <div className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to={\"/ksiazka\"} className=\"nav-link\">\n              Ksiazka\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={\"/add\"} className=\"nav-link\">\n              Dodaj\n            </Link>\n          </li>\n        </div>\n      </nav>\n\n      <div className=\"container mt-3\">\n        <Switch>\n          <Route exact path={[\"/\", \"/ksiazka\"]} component={KsiazkaList} />\n          <Route exact path=\"/add\" component={AddEmployee} />\n          <Route path=\"/ksiazka/:id\" component={Ksiazka} />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}