import React, { useState, useEffect } from "react";
import AuthService from "../../services/Auth/auth.service";
import FilesPodstService from "../../services/Files/files_podst.service"
import Box from '@mui/material/Box';
import { Button, Container } from "react-bootstrap";

import SearchBar from './utils/SearchBar.js';
import PaginationList, { getRequestParams } from "./utils/PaginationList"
import useAuth from "../../hooks/useAuth"



const ShowList_podst = () => {
  const { showAdminBoard, showFileUploadBoard, currentUser } = useAuth();
  const [entries, setEntries] = useState([]);

  //Jest w textfield, retrievetutorials
  const [searchText, setSearchText] = useState("");
  const [count, setCount] = useState(0);
  const [page, setPage] = useState(1);
  const [pageSize, setPageSize] = useState(16);


  const [message, setMessage] = useState("");

  //Progress bar do modala
  const [characterCount, setCharacterCount] = useState(0);
  const [uploadPercentage, setUploadPercentage] = useState(0);


  //MODAL EXPORT 
  // const [selectedItem, setSelectedItem] = useState(null);
  // const [selectedItem2, setSelectedItem2] = useState({
  //   id: null,
  //   title: "",
  //   description: "",
  // })

  const sortedEntries = [...entries].sort((a, b) => entries.id > entries.id ? 1 : -1)

  const retrieveTutorials = () => {
    const params = getRequestParams(searchText, page, pageSize);
    FilesPodstService.getAll(params)
      .then(response => {
        const { entries, totalPages } = response.data;
        setEntries(entries);
        setCount(totalPages);
      }).catch((e) => {
        console.log(e);
      });
  }

  //update and delete
  // const updateFile = () => {
  //   event.preventDefault();
  //   FilesPodstService.update(selectedItem2.id, selectedItem2)
  //     .then(response => {
  //       setMessage("Zaaktualizowano pozycję, za chwilę nastąpi przekierowanie...")
  //       setTimeout(() => window.location.reload(true), 2000);
  //     }).catch(e => {
  //       console.log(e);
  //     })
  // }

  // const deleteFile = (id) => {
  //   FilesPodstService.remove(id)
  //     .then(response => {
  //       console.log(response.data);
  //     }).catch(function (error) {
  //       console.log(error);
  //     });
  //   window.location.reload(true);
  // }

  // const loggedUser = () => {
  //   const user = AuthService.getCurrentUser();
  //   if (user) {
  //     setCurrentUser(user);
  //     setShowAdminBoard(user.roles.includes("ROLE_ADMIN"));
  //     setFileUploadBoard(user.roles.includes("ROLE_ADD_FILE"));
  //   }
  // }

  useEffect(() => {
    // loggedUser();
  }, []);
  useEffect(retrieveTutorials, [page, pageSize]);


  const expandModal = (poz) => {
    setSelectedItem(poz);
    setShowModal(true);
  }

  const expandModal2 = (poz) => {
    setSelectedItem2(poz);
    setShowModal2(true);
  }

  const closeModal = () => {
    setSelectedItem(null);
    setShowModal(true);
  }
  const closeModal2 = () => {
    setSelectedItem2(null);
    setShowModal2(true);
  }



  const handleInputChange = event => {
    const { name, value } = event.target;
    setSelectedItem2({ ...selectedItem2, [name]: value });
  }

  const handlePageChange = (e, value) => {
    setPage(value);
  }



  return (
    <>
      <div className="content">

        <Container fluid>
          <Box
            noValidate
            sx={{ width: 450 }}
            component="form"
            autoComplete="on">
            <SearchBar searchText={searchText} onChange={setSearchText} retrieveTutorials={retrieveTutorials}
            />
          </Box>

          {sortedEntries &&
            sortedEntries.map((poz) => {
              return (
                <div class="angry-grid">
                  <div id="item-0">
                    <div className="h4u" data-id={poz.id}>{poz.title}</div>
                    <hr className="solid"></hr>
                    <div className="h5u">{poz.description}</div>
                  </div>


                  <div id="item-1">
                    <Button style={{ margin: '-1px 0 -1px 0px' }} className="btn form-control px-0 btn-danger border-right border-bottom border-left rounded-0"
                      onClick={() => expandModal2(poz)}>
                      Edytuj
                    </Button>
                  </div>

                  <Button style={{ margin: '-1px 0 -1px 0px' }} className="btn col-12 btn-block w-100 form-control pd-5 btn btn-danger border-right border-bottom rounded-0"
                    onClick={() => expandModal(poz)}>
                    Usuń
                  </Button>



                  <div id="item-3">
                    <Button style={{ margin: '-1px -1px -1px 0' }}
                      className=""
                      target="_blank"

                      onClick={() => handleClick(item)}
                      href={"http://localhost:8080/api/file_podst/" + poz.name}
                    >
                      <i className="nc-icon nc-cloud-download-93 size-up-down "></i></Button>
                    <Button style={{ margin: '0 -1px 0px 0' }} className="d-flex align-items-center justify-content-center rounded-top-0  rounded-0 px-0"
                      target="_blank" onChange={open}
                      href={"http://localhost:8080/api/file_podst/" + poz.nameAtt} >
                      <i className="nc-icon nc-attach-87 size-up-down"></i>
                    </Button>
                  </div>


                  )
              })}

                  <PaginationList count={count} page={page} handlePageChange={handlePageChange} />
                  </Container>
      </div>
    </>
  );
}

export default ShowList_podst;
